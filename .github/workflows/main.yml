name: Build & Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set up MSVC
        uses: microsoft/setup-msbuild@v1.1

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Install Node dependencies
        run: npm install

      - name: Bootstrap vcpkg
        run: .\vcpkg\bootstrap-vcpkg.bat
        shell: cmd

      - name: Install vcpkg dependencies
        run: |
          cd kernel
          ..\vcpkg\vcpkg install
        shell: cmd

      - name: Build (No CUDA)
        run: npm run build -- --win nsis msi
        shell: cmd

      - name: Build (With CUDA)
        run: npm run build -- --cuda --win nsis msi
        shell: cmd

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.exe
            dist/*.msi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    runs-on: macos-15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install system dependencies
        run: |
          brew install llvm cmake ninja

      - name: Install Node dependencies
        run: npm install

      - name: Bootstrap vcpkg
        run: ./vcpkg/bootstrap-vcpkg.sh

      - name: Install vcpkg dependencies
        run: |
          cd kernel
          ../vcpkg/vcpkg install

      - name: Build
        run: |
          export LDFLAGS="-lc++ -stdlib=libc++"
          npm run build -- --mac dmg

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
